
@{
    ViewBag.Title = "Index";
}


<div class="row">
    <div class="col-12">
        <h3>Car List</h3>
        <div class="d-flex justify-content-sm-end mb-1">
            @Html.ActionLink("Create", "Create", "Cars", new {}, new {@class="btn btn-primary btn-sm"})
        </div>
        @Html.Action("CarList", "Cars")
    </div>
</div>
***********************************
@model CarDetails.ViewModel.CarViewModel
@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>
<div class="row">
    <div class="col-12">
        <h3>Create new CarList</h3>
        <div class="alert" style="display:none">

        </div>
        @using (Html.BeginForm("Create", "Car", FormMethod.Post, htmlAttributes: new { id = "frm" }))
        {
            <div class="form-group row mb-1">
                <label class="col-form-label col-2">Model</label>
                <div class="col-4">
                    @Html.TextBoxFor(x => x.Model, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => Model, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row mb-1">
                <label class="col-form-label col-2">Make</label>
                <div class="col-4">
                    @Html.TextBoxFor(x => x.Make, new { @class = "form-control date" })
                    @Html.ValidationMessageFor(x => x.Make, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row mb-1">
                <label class="col-form-label col-2">Color</label>
                <div class="col-4">
                    @Html.TextBoxFor(x => x.Color, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Color, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row mb-1">
                <label class="col-form-label col-2">Price</label>
                <div class="col-4">
                    @Html.TextBoxFor(x => x.Price, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Price, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row mb-1">
                <label class="col-form-label col-2">Available</label>
                <div class="col-4">
                    @Html.CheckBoxFor(x => x.Availabel, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Availabel, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row mb-1">
                <label class="col-form-label col-2">Picture</label>
                <div class="col-4">
                    @Html.TextBoxFor(x => x.Picture, new { @class = "form-control", @type = "file" })
                    @Html.ValidationMessageFor(x => x.Picture, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row mb-1">

                <div class="col-4">
                    <button type="button" class="btn btn-success" id="save"></button>
                </div>
            </div>
        }
    </div>
</div>

@section styles{

    <link href="~/Content/bootstrap-datepicker.standalone.css" rel="stylesheet" />

}
@section scripts{
    <script src="~/Scripts/jquery-3.6.3.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    <script src="~/Scripts/bootstrap-datepicker.js"></script>
    <script>
        $(() => {
            $(".date").datepicker({
                format: "yyyy-mm-dd"
            })
        });
        $("#save").click(() => {
            var isValid = $("#frm").valid();
            if (isValid) {
                var formData = new FormData();
                formData.append("Model", $("#Model").val());
                formData.append("Make", $("#Make").val());
                formData.append("Color", $("#Color").val());
                formData.append("Price", $("#Price").val());
                formData.append("Availabel", document.getElementById("Availabel").checked);
                if (document.getElementById("Picture").files.length > 0) {
                    formData.append("Picture", document.getElementById("Picture").files[0]);
                    console.log(formData)
                }
                $.ajax({
                    type: "POST",
                    url: "Car/Create",
                    data: formData,
                    contentType: false,
                    processData: false,
                    success: r => {
                        $("#alert").html(r).show();
                    }
                });
               
            }
        })

    </script>

}
*********************************
public ActionResult Create()
        {
            return View();
        }
        public PartialViewResult Create(CarViewModel data)
        {
            if(ModelState.IsValid) 
            {
                var c = new Car()
                {
                    Model = data.Model,
                    Make = data.Make,
                    Color = data.Color,
                    Price = data.Price,
                    Availabel = data.Availabel
                };
                if(data.Picture.ContentLength> 0) 
                {
                    string ext = Path.GetExtension(data.Picture.FileName);
                    string fileName = Path.GetFileNameWithoutExtension(Path.GetRandomFileName())+ ext;
                    string savePath = Path.Combine(Server.MapPath("~/Pictures"), fileName);
                    data.Picture.SaveAs(savePath);
                    c.Picture = fileName;
                }
                db.Cars.Add(c);
                db.SaveChanges();
                return PartialView();
            }
            return PartialView();
        }

*********************************

Partial
@model IEnumerable<CarDetails.Models.Car>
<table class="table table-striped table-responsive-sm table-hover table-light table-bordered table-light">
   <thead class="bg-success text-dark">
       <tr class="bg-secondary">
           <th>Picture</th>
           <th>Model Name</th>
           <th>Launch Year</th>
           <th>Color</th>
           <th>Price</th>
           <th>Available</th>
           <th>.....</th>
       </tr>
   </thead>
    <tbody>
        @foreach(var c in Model)
            {
                <tr>
                    <td><img src="~/Pictures/@c.Picture" class="img-fluid" style="width:40px;height:40px" /></td>
                    <td>@c.Model</td>
                    <td>@c.Make</td>
                    <td>@c.Color</td>
                    <td>@c.Price</td>
                    <td>@c.Availabel</td>
                   <td>
                        @Html.ActionLink("Edit", "Edit", "Candidates", new { id = c.CarId }, new { @class = "btn btn-primary btn-sm" })
                    
                    @Html.ActionLink("Delete", "Delete", "Candidates", new { id = c.CarId }, new { @class = "btn btn-danger btn-sm" })
                   </td>
                </tr>
            }
    </tbody>
</table>

********************
Create

@model CarDetails.ViewModel.CarViewModel
@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>
<div class="row">
    <div class="col-12">
        <h3>Create new CarList</h3>
        <div class="alert" style="display:none">

        </div>
        @using (Html.BeginForm("Create", "Car", FormMethod.Post, htmlAttributes: new { id = "frm" }))
        {
            <div class="form-group row mb-1">
                <label class="col-form-label col-2">Model</label>
                <div class="col-4">
                    @Html.TextBoxFor(x => x.Model, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => Model, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row mb-1">
                <label class="col-form-label col-2">Make</label>
                <div class="col-4">
                    @Html.TextBoxFor(x => x.Make, new { @class = "form-control date" })
                    @Html.ValidationMessageFor(x => x.Make, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row mb-1">
                <label class="col-form-label col-2">Color</label>
                <div class="col-4">
                    @Html.TextBoxFor(x => x.Color, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Color, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row mb-1">
                <label class="col-form-label col-2">Price</label>
                <div class="col-4">
                    @Html.TextBoxFor(x => x.Price, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Price, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row mb-1">
                <label class="col-form-label col-2">Available</label>
                <div class="col-4">
                    @Html.CheckBoxFor(x => x.Availabel, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Availabel, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row mb-1">
                <label class="col-form-label col-2">Picture</label>
                <div class="col-4">
                    @Html.TextBoxFor(x => x.Picture, new { @class = "form-control", @type = "file" })
                    @Html.ValidationMessageFor(x => x.Picture, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row mb-1">

                <div class="col-4">
                    <button type="button" class="btn btn-success" id="save"></button>
                </div>
            </div>
        }
    </div>
</div>

@section styles{

    <link href="~/Content/bootstrap-datepicker.standalone.css" rel="stylesheet" />

}
@section scripts{
    <script src="~/Scripts/jquery-3.6.3.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    <script src="~/Scripts/bootstrap-datepicker.js"></script>
    <script>
        $(() => {
            $(".date").datepicker({
                format: "yyyy-mm-dd"
            })
        });
        $("#save").click(() => {
            var isValid = $("#frm").valid();
            if (isValid) {
                var formData = new FormData();
                formData.append("Model", $("#Model").val());
                formData.append("Make", $("#Make").val());
                formData.append("Color", $("#Color").val());
                formData.append("Price", $("#Price").val());
                formData.append("Availabel", document.getElementById("Availabel").checked);
                if (document.getElementById("Picture").files.length > 0) {
                    formData.append("Picture", document.getElementById("Picture").files[0]);
                    console.log(formData)
                }
                $.ajax({
                    type: "POST",
                    url: "Car/Create",
                    data: formData,
                    contentType: false,
                    processData: false,
                    success: r => {
                        $("#alert").html(r).show();
                    }
                });
               
            }
        })

    </script>

}
*********************
index

@{
    ViewBag.Title = "Index";
}


<div class="row">
    <div class="col-12">
        <h3>Car List</h3>
        <div class="d-flex justify-content-sm-end mb-1">
            @Html.ActionLink("Create", "Create", "Cars", new {}, new {@class="btn btn-primary btn-sm"})
        </div>
        @Html.Action("CarList", "Cars")
    </div>
</div>
